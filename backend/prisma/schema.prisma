// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Map {
  id      Int      @id @default(autoincrement())
  url     String   @unique
  name    String
  answers Answer[]
  rounds  Round[]
}

model Answer {
  id          Int       @id @default(autoincrement())
  mapId       Int
  map         Map       @relation(fields: [mapId], references: [id])
  posX        Int
  posY        Int
  characterId Int
  character   Character @relation(fields: [characterId], references: [id])
}

model Character {
  id              Int               @id @default(autoincrement())
  name            String            @unique
  url             String
  Answer          Answer[]
  RoundCharacters RoundCharacters[]
}

model Round {
  id         Int               @id @default(autoincrement())
  userId     String
  name       String
  mapId      Int
  map        Map               @relation(fields: [mapId], references: [id])
  finished   Boolean           @default(false)
  createdAt  DateTime          @default(now())
  time       Int?
  characters RoundCharacters[]
}

model RoundCharacters {
  id          Int       @id @default(autoincrement())
  round       Round     @relation(fields: [roundId], references: [id], onDelete: Cascade)
  roundId     Int
  character   Character @relation(fields: [characterId], references: [id])
  characterId Int
}
